{"ast":null,"code":"var _jsxFileName = \"/Users/rorymcginnis/Desktop/karen_github/artwork/test/FieryFusion/FieryFusion/src/ArtPiece.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArtPiece({\n  artworks\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [art, setArt] = useState(null);\n  useEffect(() => {\n    const foundArt = artworks.find(a => a.id === parseInt(id));\n    setArt(foundArt);\n  }, [id, artworks]);\n  if (!art) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"art-piece-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: art.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: art.image,\n      alt: art.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        whiteSpace: 'pre-line'\n      },\n      children: art.snippet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtPiece, \"LNdB6+4+mBiHVLuRqQDYCAUfu+s=\", false, function () {\n  return [useParams];\n});\n_c = ArtPiece;\nexport default ArtPiece;\nvar _c;\n$RefreshReg$(_c, \"ArtPiece\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","ArtPiece","artworks","_s","id","art","setArt","foundArt","find","a","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","src","image","alt","style","whiteSpace","snippet","_c","$RefreshReg$"],"sources":["/Users/rorymcginnis/Desktop/karen_github/artwork/test/FieryFusion/FieryFusion/src/ArtPiece.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction ArtPiece({ artworks }) {\n  const { id } = useParams();\n  const [art, setArt] = useState(null);\n\n  useEffect(() => {\n    const foundArt = artworks.find(a => a.id === parseInt(id));\n    setArt(foundArt);\n  }, [id, artworks]);\n\n  if (!art) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"art-piece-detail\">\n      <h2>{art.name}</h2>\n      <img src={art.image} alt={art.name} />\n      <p style={{ whiteSpace: 'pre-line' }}>{art.snippet}</p>\n    </div>\n  );\n}\n\nexport default ArtPiece;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGL,QAAQ,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKM,QAAQ,CAACN,EAAE,CAAC,CAAC;IAC1DE,MAAM,CAACC,QAAQ,CAAC;EAClB,CAAC,EAAE,CAACH,EAAE,EAAEF,QAAQ,CAAC,CAAC;EAElB,IAAI,CAACG,GAAG,EAAE;IACR,oBAAOL,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEf,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC/BX,OAAA;MAAAW,QAAA,EAAKN,GAAG,CAACY;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBf,OAAA;MAAKkB,GAAG,EAAEb,GAAG,CAACc,KAAM;MAACC,GAAG,EAAEf,GAAG,CAACY;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCf,OAAA;MAAGqB,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAX,QAAA,EAAEN,GAAG,CAACkB;IAAO;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACZ,EAAA,CApBQF,QAAQ;EAAA,QACAH,SAAS;AAAA;AAAA0B,EAAA,GADjBvB,QAAQ;AAsBjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}